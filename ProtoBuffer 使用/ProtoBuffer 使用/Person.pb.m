// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Person.pb.h"
// @@protoc_insertion_point(imports)

@implementation PersonRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PersonRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PBUser ()
@property (strong) NSString* userId;
@property (strong) NSString* nick;
@property (strong) NSString* avatar;
@end

@implementation PBUser

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasNick {
  return !!hasNick_;
}
- (void) setHasNick:(BOOL) _value_ {
  hasNick_ = !!_value_;
}
@synthesize nick;
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) _value_ {
  hasAvatar_ = !!_value_;
}
@synthesize avatar;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.nick = @"";
    self.avatar = @"";
  }
  return self;
}
static PBUser* defaultPBUserInstance = nil;
+ (void) initialize {
  if (self == [PBUser class]) {
    defaultPBUserInstance = [[PBUser alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPBUserInstance;
}
- (instancetype) defaultInstance {
  return defaultPBUserInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasNick) {
    [output writeString:2 value:self.nick];
  }
  if (self.hasAvatar) {
    [output writeString:3 value:self.avatar];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeStringSize(1, self.userId);
  }
  if (self.hasNick) {
    size_ += computeStringSize(2, self.nick);
  }
  if (self.hasAvatar) {
    size_ += computeStringSize(3, self.avatar);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBUser*) parseFromData:(NSData*) data {
  return (PBUser*)[[[PBUser builder] mergeFromData:data] build];
}
+ (PBUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUser*)[[[PBUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBUser*) parseFromInputStream:(NSInputStream*) input {
  return (PBUser*)[[[PBUser builder] mergeFromInputStream:input] build];
}
+ (PBUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUser*)[[[PBUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBUser*)[[[PBUser builder] mergeFromCodedInputStream:input] build];
}
+ (PBUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUser*)[[[PBUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBUserBuilder*) builder {
  return [[PBUserBuilder alloc] init];
}
+ (PBUserBuilder*) builderWithPrototype:(PBUser*) prototype {
  return [[PBUser builder] mergeFrom:prototype];
}
- (PBUserBuilder*) builder {
  return [PBUser builder];
}
- (PBUserBuilder*) toBuilder {
  return [PBUser builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasNick) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nick", self.nick];
  }
  if (self.hasAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatar", self.avatar];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: self.userId forKey: @"userId"];
  }
  if (self.hasNick) {
    [dictionary setObject: self.nick forKey: @"nick"];
  }
  if (self.hasAvatar) {
    [dictionary setObject: self.avatar forKey: @"avatar"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBUser class]]) {
    return NO;
  }
  PBUser *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      self.hasNick == otherMessage.hasNick &&
      (!self.hasNick || [self.nick isEqual:otherMessage.nick]) &&
      self.hasAvatar == otherMessage.hasAvatar &&
      (!self.hasAvatar || [self.avatar isEqual:otherMessage.avatar]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  if (self.hasNick) {
    hashCode = hashCode * 31 + [self.nick hash];
  }
  if (self.hasAvatar) {
    hashCode = hashCode * 31 + [self.avatar hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBUserBuilder()
@property (strong) PBUser* resultPbuser;
@end

@implementation PBUserBuilder
@synthesize resultPbuser;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbuser = [[PBUser alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbuser;
}
- (PBUserBuilder*) clear {
  self.resultPbuser = [[PBUser alloc] init];
  return self;
}
- (PBUserBuilder*) clone {
  return [PBUser builderWithPrototype:resultPbuser];
}
- (PBUser*) defaultInstance {
  return [PBUser defaultInstance];
}
- (PBUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBUser*) buildPartial {
  PBUser* returnMe = resultPbuser;
  self.resultPbuser = nil;
  return returnMe;
}
- (PBUserBuilder*) mergeFrom:(PBUser*) other {
  if (other == [PBUser defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasNick) {
    [self setNick:other.nick];
  }
  if (other.hasAvatar) {
    [self setAvatar:other.avatar];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setNick:[input readString]];
        break;
      }
      case 26: {
        [self setAvatar:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultPbuser.hasUserId;
}
- (NSString*) userId {
  return resultPbuser.userId;
}
- (PBUserBuilder*) setUserId:(NSString*) value {
  resultPbuser.hasUserId = YES;
  resultPbuser.userId = value;
  return self;
}
- (PBUserBuilder*) clearUserId {
  resultPbuser.hasUserId = NO;
  resultPbuser.userId = @"";
  return self;
}
- (BOOL) hasNick {
  return resultPbuser.hasNick;
}
- (NSString*) nick {
  return resultPbuser.nick;
}
- (PBUserBuilder*) setNick:(NSString*) value {
  resultPbuser.hasNick = YES;
  resultPbuser.nick = value;
  return self;
}
- (PBUserBuilder*) clearNick {
  resultPbuser.hasNick = NO;
  resultPbuser.nick = @"";
  return self;
}
- (BOOL) hasAvatar {
  return resultPbuser.hasAvatar;
}
- (NSString*) avatar {
  return resultPbuser.avatar;
}
- (PBUserBuilder*) setAvatar:(NSString*) value {
  resultPbuser.hasAvatar = YES;
  resultPbuser.avatar = value;
  return self;
}
- (PBUserBuilder*) clearAvatar {
  resultPbuser.hasAvatar = NO;
  resultPbuser.avatar = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
